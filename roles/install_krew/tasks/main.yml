---
- block:
    - name: Get latest release
      set_fact:
        latest_version: "{{ lookup('artis3n.github.latest_release', 'kubernetes-sigs/krew') }}"
  when: krew_version == "latest"

- name: Set version to download
  changed_when: false
  set_fact:
    krew_version_to_install: |-
      {{ (krew_version == "latest") | ternary(latest_version, krew_version) }}

- import_tasks: krew_version.yml

- name: Determine if new version needs to be installed
  changed_when: false
  set_fact:
    krew_already_installed: |-
      {{ existing_krew_version.rc == 0 and (existing_krew_version["stdout"].find(krew_version_to_install) != -1) }}

- block:
    - name: Create temp directory
      tempfile:
        state: directory
        suffix: krew
      register: install_temp_dir

    - name: Determine outputs directories and binary paths
      set_fact:
        krew_bootstrap_binary_name: 'krew-{{ (ansible_facts["os_family"] == "Darwin") | ternary("darwin", "linux") }}_amd64'
        krew_manifest_dest: "{{ install_temp_dir.path }}/krew.yaml"
        krew_bootstrap_binary_dest: "{{ install_temp_dir.path }}/krew.tar.gz"
      changed_when: false

    - name: Download krew manifest
      get_url:
        url: "https://github.com/kubernetes-sigs/krew/releases/download/{{ krew_version_to_install }}/krew.yaml"
        dest: "{{ krew_manifest_dest }}"

    - name: Download krew bootstrap binary
      get_url:
        url: "https://github.com/kubernetes-sigs/krew/releases/download/{{ krew_version_to_install }}/krew.tar.gz"
        dest: "{{ krew_bootstrap_binary_dest }}"

    - name: Extract krew bootstrap binary
      unarchive:
        remote_src: true
        src: "{{ krew_bootstrap_binary_dest }}"
        dest: "{{ install_temp_dir.path  }}"

    - name: Install manifest
      command:
        argv:
          - "{{ install_temp_dir.path }}/{{ krew_bootstrap_binary_name }}"
          - install
          - "--manifest={{ krew_manifest_dest }}"
          - "--archive={{ krew_bootstrap_binary_dest }}"

  when: not krew_already_installed

- import_tasks: krew_version.yml

- name: Assert that correct version of krew is installed
  assert:
    that:
      - existing_krew_version is defined
      - existing_krew_version.rc == 0
      - existing_krew_version.stdout.find(krew_version_to_install) != -1
